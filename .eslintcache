[{"D:\\projects\\stackoverflow-clone\\src\\index.tsx":"1","D:\\projects\\stackoverflow-clone\\src\\reportWebVitals.ts":"2","D:\\projects\\stackoverflow-clone\\src\\containers\\Navbar.tsx":"3","D:\\projects\\stackoverflow-clone\\src\\theme\\theme.js":"4","D:\\projects\\stackoverflow-clone\\src\\containers\\dialog\\SignUpDialog.tsx":"5","D:\\projects\\stackoverflow-clone\\src\\containers\\dialog\\SignInDialog.tsx":"6","D:\\projects\\stackoverflow-clone\\src\\containers\\dialog\\FacebookButton.tsx":"7","D:\\projects\\stackoverflow-clone\\src\\containers\\dialog\\GithubButton.tsx":"8","D:\\projects\\stackoverflow-clone\\src\\containers\\dialog\\GoogleButton.tsx":"9","D:\\projects\\stackoverflow-clone\\src\\containers\\dialog\\ModalButton.tsx":"10","D:\\projects\\stackoverflow-clone\\src\\containers\\dialog\\Input.tsx":"11","D:\\projects\\stackoverflow-clone\\src\\containers\\dialog\\FormWrapper.tsx":"12","D:\\projects\\stackoverflow-clone\\src\\containers\\dialog\\DialogWrapper.tsx":"13","D:\\projects\\stackoverflow-clone\\src\\landing\\QuestionsPage.tsx":"14","D:\\projects\\stackoverflow-clone\\src\\containers\\question\\Question.tsx":"15","D:\\projects\\stackoverflow-clone\\src\\containers\\question\\QuestionHeader.tsx":"16","D:\\projects\\stackoverflow-clone\\src\\containers\\Button.tsx":"17","D:\\projects\\stackoverflow-clone\\src\\containers\\question\\body\\QuestionBody.tsx":"18","D:\\projects\\stackoverflow-clone\\src\\containers\\question\\body\\Actions.tsx":"19","D:\\projects\\stackoverflow-clone\\src\\containers\\question\\AdditionalInformation.tsx":"20","D:\\projects\\stackoverflow-clone\\src\\containers\\question\\body\\CardUser.tsx":"21"},{"size":742,"mtime":1613545955355,"results":"22","hashOfConfig":"23"},{"size":425,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":4495,"mtime":1613574212929,"results":"25","hashOfConfig":"23"},{"size":276,"mtime":1612718753835,"results":"26","hashOfConfig":"23"},{"size":1337,"mtime":1613545356037,"results":"27","hashOfConfig":"23"},{"size":1410,"mtime":1613545356037,"results":"28","hashOfConfig":"23"},{"size":719,"mtime":1613545356035,"results":"29","hashOfConfig":"23"},{"size":702,"mtime":1613545356035,"results":"30","hashOfConfig":"23"},{"size":630,"mtime":1613545356035,"results":"31","hashOfConfig":"23"},{"size":722,"mtime":1613545356037,"results":"32","hashOfConfig":"23"},{"size":333,"mtime":1613545356036,"results":"33","hashOfConfig":"23"},{"size":714,"mtime":1613545356035,"results":"34","hashOfConfig":"23"},{"size":736,"mtime":1613545356034,"results":"35","hashOfConfig":"23"},{"size":860,"mtime":1613574295257,"results":"36","hashOfConfig":"23"},{"size":297,"mtime":1613567402239,"results":"37","hashOfConfig":"23"},{"size":597,"mtime":1613568213366,"results":"38","hashOfConfig":"23"},{"size":1080,"mtime":1613552625470,"results":"39","hashOfConfig":"23"},{"size":2252,"mtime":1613569291275,"results":"40","hashOfConfig":"23"},{"size":1111,"mtime":1613567675502,"results":"41","hashOfConfig":"23"},{"size":769,"mtime":1613568213372,"results":"42","hashOfConfig":"23"},{"size":1016,"mtime":1613569523869,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1s59jhj",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\projects\\stackoverflow-clone\\src\\index.tsx",[],["96","97"],"D:\\projects\\stackoverflow-clone\\src\\reportWebVitals.ts",[],"D:\\projects\\stackoverflow-clone\\src\\containers\\Navbar.tsx",[],"D:\\projects\\stackoverflow-clone\\src\\theme\\theme.js",[],["98","99"],"D:\\projects\\stackoverflow-clone\\src\\containers\\dialog\\SignUpDialog.tsx",[],"D:\\projects\\stackoverflow-clone\\src\\containers\\dialog\\SignInDialog.tsx",[],"D:\\projects\\stackoverflow-clone\\src\\containers\\dialog\\FacebookButton.tsx",["100"],"import React from \"react\"\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport ModalButton from \"./ModalButton\"\r\n\r\nconst useStyles = makeStyles({\r\n    button: {\r\n        background: \"#385499\",\r\n        color: \"#fff\",\r\n        \"&:hover\": {\r\n            background: \"#314a86\"\r\n        }\r\n    },\r\n});\r\n\r\ntype FacebookButton= {\r\n    title: React.ReactNode\r\n}\r\n\r\nconst FacebookButton = (props: FacebookButton) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <ModalButton\r\n            icon={<FacebookIcon />}\r\n            title={props.title}\r\n            class={classes.button}\r\n        />\r\n    )\r\n};\r\n\r\nexport default FacebookButton;","D:\\projects\\stackoverflow-clone\\src\\containers\\dialog\\GithubButton.tsx",["101"],"import React from \"react\"\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport ModalButton from \"./ModalButton\"\r\n\r\nconst useStyles = makeStyles({\r\n    button: {\r\n        background: \"#000\",\r\n        color: \"#fff\",\r\n        \"&:hover\": {\r\n            background: \"#2f3337\"\r\n        }\r\n    },\r\n});\r\n\r\ntype GithubButton= {\r\n    title: React.ReactNode\r\n}\r\n\r\nconst GithubButton = (props: GithubButton) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <ModalButton\r\n            icon={<GitHubIcon />}\r\n            title={props.title}\r\n            class={classes.button}\r\n        />\r\n    )\r\n};\r\n\r\nexport default GithubButton;","D:\\projects\\stackoverflow-clone\\src\\containers\\dialog\\GoogleButton.tsx",["102"],"import React from \"react\"\r\nimport GTranslateIcon from \"@material-ui/icons/GTranslate\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport ModalButton from \"./ModalButton\"\r\n\r\nconst useStyles = makeStyles({\r\n    button: {\r\n        border: \"1px solid #bbc0c4\"\r\n    },\r\n});\r\n\r\ntype GoogleButton= {\r\n    title: React.ReactNode\r\n}\r\n\r\nconst GoogleButton = (props: GoogleButton) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <ModalButton\r\n            icon={<GTranslateIcon />}\r\n            title={props.title}\r\n            class={classes.button}\r\n        />\r\n    )\r\n};\r\n\r\nexport default GoogleButton;","D:\\projects\\stackoverflow-clone\\src\\containers\\dialog\\ModalButton.tsx",["103"],"import React from \"react\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\nconst useStyles = makeStyles({\r\n    button: {\r\n        margin: \"0.5rem 0\",\r\n        padding: \"0.5rem 3rem\"\r\n    },\r\n});\r\n\r\ntype ModalButton= {\r\n    /**className for Button*/\r\n    class?: string,\r\n    /**icon Component*/\r\n    icon?: React.ReactNode,\r\n    /**title of the Button*/\r\n    title: React.ReactNode\r\n}\r\n\r\nconst ModalButton = (props: ModalButton) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Button className={`${classes.button} ${props.class}`}>\r\n            {props.icon}\r\n            {props.title}\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default ModalButton;","D:\\projects\\stackoverflow-clone\\src\\containers\\dialog\\Input.tsx",["104"],"import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\ntype Input = {\r\n    label: string;\r\n    style?: React.CSSProperties | undefined\r\n}\r\n\r\nconst Input = (props: Input) => {\r\n    return (\r\n        <TextField label={props.label} variant=\"outlined\" style={props.style}/>\r\n    )\r\n}\r\n\r\nexport default Input;","D:\\projects\\stackoverflow-clone\\src\\containers\\dialog\\FormWrapper.tsx",[],"D:\\projects\\stackoverflow-clone\\src\\containers\\dialog\\DialogWrapper.tsx",["105"],"import React from \"react\";\r\nimport {Dialog, DialogContent} from \"@material-ui/core\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\nconst useStyles = makeStyles({\r\n    dialogContent: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n});\r\n\r\ntype DialogWrapper = {\r\n    children: React.ReactNode;\r\n    open: boolean;\r\n    onClose: () => void;\r\n}\r\n\r\nconst DialogWrapper =  (props: DialogWrapper) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Dialog open={props.open} onClose={props.onClose}>\r\n            <DialogContent className={classes.dialogContent}>\r\n                {props.children}\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default DialogWrapper;","D:\\projects\\stackoverflow-clone\\src\\landing\\QuestionsPage.tsx",[],"D:\\projects\\stackoverflow-clone\\src\\containers\\question\\Question.tsx",[],"D:\\projects\\stackoverflow-clone\\src\\containers\\question\\QuestionHeader.tsx",["106"],"import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst QuestionHeader = () => {\r\n    return (\r\n        <div>\r\n            <Typography paragraph variant='h4'>Duplicate identifier 'LibraryManagedAtributes'</Typography>\r\n            <AdditionalInformation title=\"Asked\" body=\"2 years, 5 months ago\"/>\r\n            <AdditionalInformation title=\"Active\" body=\"yesterday\"/>\r\n            <AdditionalInformation title=\"Viewed\" body=\"35k times\"/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default QuestionHeader;\r\n\r\ntype AdditionalInformation = {\r\n    title: string;\r\n    body: string;\r\n}\r\n\r\nconst AdditionalInformation = (props: AdditionalInformation) => (\r\n    <div style={{display: \"inline-flex\", marginRight: \"1rem\"}}>\r\n        <Typography style={{marginRight: \"0.5rem\", color: \"grey\"}}>{props.title}</Typography>\r\n        <Typography>{props.body}</Typography>\r\n    </div>\r\n)","D:\\projects\\stackoverflow-clone\\src\\containers\\Button.tsx",["107"],"import React from \"react\";\r\nimport MuiButton from \"@material-ui/core/Button\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\nconst useStyles = makeStyles({\r\n    primary: {\r\n        marginLeft: \"0.3rem\",\r\n        backgroundColor: \"#0095ff\",\r\n        color: \"#fff\",\r\n        borderColor: \"transparent\",\r\n        \"&:hover\": {\r\n            background: \"#0077cc\"\r\n        }\r\n    },\r\n    secondary: {\r\n        backgroundColor: \"#e1ecf4\",\r\n        color: \"#39739d\",\r\n        borderColor: \"#7aa7c7\",\r\n        \"&:hover\": {\r\n            background: \"#b3d3ea\"\r\n        }\r\n    },\r\n})\r\n\r\ntype Button = {\r\n    color: 'primary' | 'secondary';\r\n    onClick: () => void;\r\n    children?: React.ReactNode;\r\n    className?: string;\r\n}\r\n\r\nconst Button = (props: Button) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <MuiButton\r\n            variant=\"outlined\"\r\n            className={`${classes[props.color]} ${props.className}`}\r\n            onClick={props.onClick}\r\n        >\r\n            {props.children}\r\n        </MuiButton>\r\n    )\r\n}\r\n\r\nexport default Button;","D:\\projects\\stackoverflow-clone\\src\\containers\\question\\body\\QuestionBody.tsx",[],"D:\\projects\\stackoverflow-clone\\src\\containers\\question\\body\\Actions.tsx",["108"],"D:\\projects\\stackoverflow-clone\\src\\containers\\question\\AdditionalInformation.tsx",["109"],"D:\\projects\\stackoverflow-clone\\src\\containers\\question\\body\\CardUser.tsx",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":20,"column":7,"nodeType":"116","messageId":"117","endLine":20,"endColumn":21},{"ruleId":"114","severity":1,"message":"118","line":20,"column":7,"nodeType":"116","messageId":"117","endLine":20,"endColumn":19},{"ruleId":"114","severity":1,"message":"119","line":16,"column":7,"nodeType":"116","messageId":"117","endLine":16,"endColumn":19},{"ruleId":"114","severity":1,"message":"120","line":21,"column":7,"nodeType":"116","messageId":"117","endLine":21,"endColumn":18},{"ruleId":"114","severity":1,"message":"121","line":9,"column":7,"nodeType":"116","messageId":"117","endLine":9,"endColumn":12},{"ruleId":"114","severity":1,"message":"122","line":18,"column":7,"nodeType":"116","messageId":"117","endLine":18,"endColumn":20},{"ruleId":"114","severity":1,"message":"123","line":22,"column":7,"nodeType":"116","messageId":"117","endLine":22,"endColumn":28},{"ruleId":"114","severity":1,"message":"124","line":32,"column":7,"nodeType":"116","messageId":"117","endLine":32,"endColumn":13},{"ruleId":"114","severity":1,"message":"125","line":21,"column":7,"nodeType":"116","messageId":"117","endLine":21,"endColumn":14},{"ruleId":"114","severity":1,"message":"123","line":21,"column":7,"nodeType":"116","messageId":"117","endLine":21,"endColumn":28},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"@typescript-eslint/no-redeclare","'FacebookButton' is already defined.","Identifier","redeclared","'GithubButton' is already defined.","'GoogleButton' is already defined.","'ModalButton' is already defined.","'Input' is already defined.","'DialogWrapper' is already defined.","'AdditionalInformation' is already defined.","'Button' is already defined.","'Actions' is already defined.","no-global-assign","no-unsafe-negation"]